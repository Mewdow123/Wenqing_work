# LEE WEN QING
# TP063870

# Import Python built-in libraries.
import os.path


# -----------------------------------------------------------------------------------
# Option 1 - New Patient Registration.
# This section contains all the functions for Option 1 for new patient registration.
# -----------------------------------------------------------------------------------


# This function is used to register new patients.
def new_patient_registration():
    # Using while loop to prompt for vaccination centre.
    # The user will be prompted to enter vaccination centre until the correct info is entered.
    while True:
        vaccination_centre = input("Please choose a vaccination centre, either VC1 or VC2: ").upper().strip()
        if vaccination_centre.upper() in ["VC1", "VC2"]:
            # The correct info is entered, we can exit the loop.
            break
        else:
            print("Invalid vaccination centre code!")

    # Using while loop to prompt for patient age.
    # The user will be prompted to enter patient age until the correct info is entered.
    while True:
        patient_age = input("Please enter the patient age: ").strip()
        if patient_age.isnumeric() and "." not in patient_age:  # isnumeric = string is numeric
            # The patient age is entered in numeric format, we can now convert it to int.
            patient_age = int(patient_age)
            # The correct info is entered, we can exit the loop.
            break
        else:
            print("Invalid patient age!")

    # Prompt the user to choose a vaccine code.
    # The system will automatically show all the available vaccine codes based on age group.
    if 12 <= patient_age < 18:  # between age 12 to age 18
        available_vaccine_codes = ["AF", "CZ", "DM"]
        # Using while loop to prompt for vaccine code.
        # The user will be prompted to enter vaccine code until the correct info is entered.
        while True:
            vaccine_code = input("Please enter one of these vaccine codes: " +
                                 str(available_vaccine_codes).replace("'", "").replace("[", "").replace("]", "") +
                                 ": ").upper().strip()
            if vaccine_code in available_vaccine_codes:
                # The correct info is entered, we can exit the loop.
                break
            else:
                print("Invalid vaccine code!")

    elif 12 <= patient_age <= 45:  # age 12 to 45
        available_vaccine_codes = ["AF", "BV", "CZ", "DM", "EC"]
        # Using while loop to prompt for vaccine code.
        # The user will be prompted to enter vaccine code until the correct info is entered.
        while True:
            vaccine_code = input("Please enter one of these vaccine codes: " +
                                 str(available_vaccine_codes).replace("'", "").replace("[", "").replace("]", "") +
                                 ": ").upper().strip()
            if vaccine_code in available_vaccine_codes:
                # The correct info is entered, we can exit the loop.
                break
            else:
                print("Invalid vaccine code!")

    elif patient_age >= 12:  # above age 12
        available_vaccine_codes = ["AF", "DM", "BV", "EC"]
        # Using while loop to prompt for vaccine code.
        # The user will be prompted to enter vaccine code until the correct info is entered.
        while True:
            vaccine_code = input("Please enter one of these vaccine codes: " +
                                 str(available_vaccine_codes).replace("'", "").replace("[", "").replace("]", "") +
                                 ": ").upper().strip()
            if vaccine_code in available_vaccine_codes:
                # The correct info is entered, we can exit the loop.
                break
            else:
                print("Invalid vaccine code!")

    else:  # age below 12, no vaccine available
        print("Sorry, vaccines are not available for age below 12.")
        # Age below 12, no vaccine available.
        # Exit the function. There is no need to prompt for patient name and other info.
        return

    # Using while loop to prompt for patient name.
    # The user will be prompted to enter patient name until the correct info is entered.
    while True:
        patient_name = input("Please enter patient name: ").upper().strip()
        if patient_name.replace(" ", "").isalpha():  # isalpha = string is in character
            # The correct info is entered, we can exit the loop.
            break
        else:
            print("Invalid patient name!")

    # Using while loop to prompt for patient IC.
    # The user will be prompted to enter patient IC until the correct info is entered.
    while True:
        patient_ic = input("Please enter patient IC: ").strip()
        if patient_ic.isnumeric() and "." not in patient_ic:  # isnumeric = string is numeric
            if len(patient_ic) == 12:
                # Check to make sure no duplicate patient IC is found.
                if not check_duplicate_patient_ic(patient_ic):
                    # The correct info is entered, we can exit the loop.
                    break
                else:
                    print("Duplicate patient IC found! Please try again.")
            else:
                print("Invalid patient IC!")
        else:
            print("Invalid patient IC!")

    # Using while loop to prompt for patient phone number.
    # The user will be prompted to enter patient phone number until the correct info is entered.
    while True:
        patient_phone_number = input("Please enter patient phone number: ").strip()
        if patient_phone_number.isnumeric() and "." not in patient_phone_number:  # isnumeric = string is numeric
            if 10 <= len(patient_phone_number) <= 11:
                # The correct info is entered, we can exit the loop.
                break
            else:
                print("Invalid patient phone number!")
        else:
            print("Invalid patient phone number!")

    # Using while loop to prompt for patient email.
    # The user will be prompted to enter patient email until the correct info is entered.
    while True:
        patient_email = input("Please enter patient email address (optional), " +
                              "leave it blank if no email address: ").strip()
        if patient_email != "":
            if "@" and "." in patient_email:  # if  @ and . is in the input , result = input
                # The correct info is entered, we can exit the loop.
                break
            else:
                print("Invalid patient email!")
        else:
            # Email is optional, if it's blank, we can exit the loop.
            break

    # The patient id needs to be unique and in sequence.
    # Call the get_next_unique_patient_id function to get the next unique patient id.
    patient_id = get_next_unique_patient_id()

    # Add a new patient information.
    add_new_patient(vaccination_centre, vaccine_code, str(patient_id), str(patient_ic), str(patient_age),
                    patient_name, str(patient_phone_number), patient_email)

    # Show the successful message to the user.
    print(patient_name + " has been successfully registered for vaccination. The patient ID is " +
          str(patient_id) + ".")


# This function is used to add a new patient.
def add_new_patient(vaccination_centre, vaccine_code, patient_id, patient_ic, patient_age, patient_name,
                    patient_phone_number, patient_email):
    # Open the "patients.txt" file for writing by appending to the end of the file.
    patient_file = open("patients.txt", "a")

    patient_file.write(vaccination_centre + "," + vaccine_code + "," + str(patient_id) + "," +
                       str(patient_ic) + "," + str(patient_age) + "," + patient_name + "," +
                       str(patient_phone_number) + "," + patient_email + "\n")

    # Close the "patients.txt" file.
    patient_file.close()


# This function is used to generate the next unique patient id.
def get_next_unique_patient_id():
    # Set the default patient id t0 100000. When the system is first use, it will return patient id 100000.
    patient_id = 100000

    # Check to make sure the "patients.txt" file exists. If we don't check this and
    # if the "patients.txt" file doesn't exist, the program will get an error.
    if os.path.isfile("patients.txt"):

        # Open the "patients.txt" file and assign it to the local patient_file variable.
        patient_file = open("patients.txt")

        # Loop through each row in the patient_file until it reaches the last row.
        for row in patient_file:

            # We will use the split function to make the last row to a list/array.
            last_row_list = row.split(",")

            # The third item in the last_row_list is patient id.
            # Increment patient id by 1 for next unique patient id.
            patient_id = int(last_row_list[2]) + 1

        # Close the "patients.txt" file.
        patient_file.close()

    return patient_id


# Check duplicate patient IC
# This function will return True if the duplicate patient IC is found; otherwise, False.
def check_duplicate_patient_ic(patient_ic):
    # Set the default result to False
    result = False

    # Check to make sure the "patients.txt" file exists. If we don't check this and
    # if the "patients.txt" file doesn't exist, the program will get an error.
    if os.path.isfile("patients.txt"):

        # Open the "patients.txt" file and assign it to the local patient_file variable.
        patient_file = open("patients.txt", "r")

        # Loop through each row in the patient_file.
        for row in patient_file:

            # We will use the split function to make this row to a list/array.
            current_list = row.split(",")

            # The fourth item in the current list is patient IC.
            current_patient_ic = current_list[3]

            # Compare the current_patient_id with patient_ic from the parameter.
            if current_patient_ic == patient_ic:
                # Set result to True if the same patient IC is found.
                # That means we found a duplicate patient IC.
                result = True
                # The duplicate patient ic has been found in the "patients.txt" file.
                # We can exit the loop. There is no need to continue the loop.
                break

        # Close the "patients.txt" file.
        patient_file.close()

    return result


# -----------------------------------------------------------------------------------
# Option 2 - Vaccine Administration.
# This section contains all the functions for Option 2 for vaccine administration.
# -----------------------------------------------------------------------------------


# Vaccine administration function
def vaccine_administration():
    # Using while loop to prompt for patient ID.
    # The user will be prompted to enter patient ID until the correct info is entered.
    while True:
        patient_id = input("Please enter patient ID: ").strip()
        if patient_id.isnumeric() and "." not in patient_id:  # isnumeric = string is numeric
            # Get the patient record.
            patient_record = get_patient_record(patient_id)

            # If the patient_record local variable is not empty, that means we have found
            # the patient record for this patient.
            if patient_record != "":
                patient_name = patient_record[5]
                patient_ic = patient_record[3]
                patient_vaccine_code = patient_record[1]
                print("   Patient Name: " + patient_name)
                print("   Patient IC: " + patient_ic)
                print("   Vaccine Code Selected: " + patient_vaccine_code)
                if patient_vaccine_code == "AF":
                    print("   Dosage Required: 2")
                elif patient_vaccine_code == "BV":
                    print("   Dosage Required: 2")
                elif patient_vaccine_code == "CZ":
                    print("   Dosage Required: 2")
                elif patient_vaccine_code == "DM":
                    print("   Dosage Required: 2")
                elif patient_vaccine_code == "EC":
                    print("   Dosage Required: 1")

                # Get the dose number received for this patient.
                patient_dose_number_received = get_patient_dose_number_received(patient_id)
                if patient_dose_number_received == "D2":
                    print("   Vaccination Status: COMPLETED-" + patient_dose_number_received)
                    print(patient_name + " had already been fully vaccinated!")
                elif patient_vaccine_code == "EC" and patient_dose_number_received == "D1":
                    print("   Vaccination Status: COMPLETED-" + patient_dose_number_received)
                    print(patient_name + " had already been fully vaccinated!")
                elif patient_dose_number_received == "D1":
                    print("   Vaccination Status: COMPLETED-" + patient_dose_number_received)
                    # Using while loop to prompt for D2 for dose number 2.
                    # The user will be prompted to enter D2 for dose number 2 until the correct info is entered.
                    while True:
                        dose_number = input("Please enter D2 for dose number 2: ").upper().strip()
                        if dose_number == "D2":
                            # Add this patient to "vaccination.txt" text file.
                            add_patient_vaccination(patient_id, dose_number)
                            print("Congratulation! You're now fully vaccinated! Stay safe with Malaysia!")

                            # The correct info is entered, we can exit the loop for D2 for dose number 2.
                            break
                        else:
                            print("Invalid dose number!")
                else:  # New status
                    print("   Vaccination Status: NEW")
                    # Using while loop to prompt for D1 for dose number 1.
                    # The user will be prompted to enter D1 for dose number 1 until the correct info is entered.
                    while True:
                        dose_number = input("Please enter D1 for dose number 1: ").upper().strip()
                        if dose_number == "D1":
                            # Add this patient to "vaccination.txt" text file.
                            add_patient_vaccination(patient_id, dose_number)

                            if patient_vaccine_code == "AF":
                                print("Please return for your second dose after 14 days. Thank you! ")
                            elif patient_vaccine_code == "BV":
                                print("Please return for your second dose after 21 days. Thank you!")
                            elif patient_vaccine_code == "CZ":
                                print("Please return for your second dose after 21 days. Thank you!")
                            elif patient_vaccine_code == "DM":
                                print("Please return for your second dose after 28 days. Thank you! ")
                            elif patient_vaccine_code == "EC":
                                print("You only need one dose for EC vaccine. You're now fully vaccinated! Stay safe!")

                            # The correct info is entered, we can exit the loop for D1 for dose number 1.
                            break
                        else:
                            print("Invalid dose number!")

                # The correct info is entered, we can exit the loop to prompt for patient ID.
                break
            else:
                # The patient_record local variable is empty, that means the patient ID cannot be found.
                print("Sorry, patient ID " + patient_id + " cannot be found. Please try again!")
        else:
            print("Invalid patient ID")


# This function is used to add vaccination info for a patient.
def add_patient_vaccination(patient_id, dose_number_received):
    # Open the "vaccination.txt" file for writing by appending to the end of the file.
    vaccination_file = open("vaccination.txt", "a")

    vaccination_file.write(str(patient_id) + "," + str(dose_number_received) + "\n")

    # Close the "vaccination.txt" file.
    vaccination_file.close()


# This function is used to return the patient record in a list/array.
def get_patient_record(patient_id):
    # Set the default result to empty string
    result = ""

    # Check to make sure the "patients.txt" file exists. If we don't check this and
    # if the "patients.txt" file doesn't exist, the program will get an error.
    if os.path.isfile("patients.txt"):

        # Open the "patients.txt" file and assign it to the local patient_file variable.
        patient_file = open("patients.txt", "r")

        # Loop through each row in the patient_file.
        for row in patient_file:
            # We will use the split function to make this row to a list/array.
            current_list = row.replace("\n", "").split(",")
            # The third item in the current list is patient id.
            current_patient_id = current_list[2]

            # Compare the current_patient_id with patient_id
            if current_patient_id == patient_id:
                # Set result to current list/array
                result = current_list
                # The correct patient id has been found in the "patients.txt" file.
                # There will be only one patient in the text file.
                # We can exit the loop. There is no need to continue the loop.
                break

        # Close the "patients.txt" file.
        patient_file.close()

    return result


# This function is used to return the last dose number received for a patient.
def get_patient_dose_number_received(patient_id):
    # Set the default result to empty string
    result = ""

    # Check to make sure the "vaccination.txt" file exists. If we don't check this and
    # if the "vaccination.txt" file doesn't exist, the program will get an error.
    if os.path.isfile("vaccination.txt"):

        # Open the "vaccination.txt" file and assign it to the local vaccination_file variable.
        vaccination_file = open("vaccination.txt", "r")

        # Loop through each row in the vaccination_file.
        for row in vaccination_file:
            # We will use the split function to make this row to a list/array.
            current_list = row.split(",")
            # The first item in the current list is patient id.
            current_patient_id = current_list[0]

            # Compare the current_patient_id with patient_id from the parameter.
            if current_patient_id == patient_id:
                # Set result to dose number. Use strip function to remove extra space.
                result = str(current_list[1].strip())

        # Close the "vaccination.txt" file.
        vaccination_file.close()

    return result


# -----------------------------------------------------------------------------------
# Option 3 - Search Patient Record and Vaccination Status
# This section contains all the functions for Option 3 to search patient record and
# vaccination status.
# -----------------------------------------------------------------------------------


# Search patient record and vaccination status.
def search_patient_and_vaccination_status():
    # Using while loop to prompt for patient ID.
    # The user will be prompted to enter patient ID until the correct info is entered.
    while True:
        patient_id = input("Please enter patient ID: ").strip()

        if patient_id.isnumeric() and "." not in patient_id:  # isnumeric = string is numeric
            # Get the patient record for the patient ID entered.
            patient_record = get_patient_record(patient_id)

            # If the patient_record local variable is not empty, that means we have found
            # the patient record for this patient.
            if patient_record != "":
                patient_vaccination_centre = patient_record[0]
                patient_vaccine_code = patient_record[1]
                patient_ic = patient_record[3]
                patient_age = patient_record[4]
                patient_name = patient_record[5]
                patient_phone_number = patient_record[6]
                patient_email = patient_record[7]

                print("------- Patient Record for Patient ID " + patient_id + " -------")
                print("   Patient Name: " + patient_name)
                print("   Patient IC: " + patient_ic)
                print("   Patient Age: " + patient_age)
                print("   Patient Phone Number: " + patient_phone_number)
                print("   Patient Email: " + patient_email)
                print("   Vaccination Centre Selected: " + patient_vaccination_centre)
                print("   Vaccine Code Selected: " + patient_vaccine_code)

                if patient_vaccine_code == "AF":
                    print("   Dosage Required: 2")
                elif patient_vaccine_code == "BV":
                    print("   Dosage Required: 2")
                elif patient_vaccine_code == "CZ":
                    print("   Dosage Required: 2")
                elif patient_vaccine_code == "DM":
                    print("   Dosage Required: 2")
                elif patient_vaccine_code == "EC":
                    print("   Dosage Required: 1")

                # Get the dose number received for this patient.
                patient_dose_number_received = get_patient_dose_number_received(patient_id)
                if patient_dose_number_received == "D2":
                    print("   Vaccination Status: COMPLETED")
                elif patient_vaccine_code == "EC" and patient_dose_number_received == "D1":
                    print("   Vaccination Status: COMPLETED")
                elif patient_dose_number_received == "D1":
                    print("   Vaccination Status: COMPLETED-D1")
                else:
                    print("   Vaccination Status: NEW")

                # The correct info is entered, we can exit the loop to prompt for patient ID.
                break
            else:
                print("Sorry, patient ID " + patient_id + " cannot be found. Please try again!")
        else:
            print("Invalid patient ID!")


# -----------------------------------------------------------------------------------
# Option 4 - Statistical Information on Patients Vaccinated.
# This section contains all the functions for Option 4 to show the statistical
# information on patients vaccinated.
# -----------------------------------------------------------------------------------


# Show statistical information.
def statistical_information():
    # Set default counters to zero.
    vc1_first_dose_counter = 0
    vc1_completed_counter = 0
    vc2_first_dose_counter = 0
    vc2_completed_counter = 0

    # Check to make sure the "patients.txt" file exists. If we don't check this and
    # if the "patients.txt" file doesn't exist, the program will get an error.
    if os.path.isfile("patients.txt"):

        # Open the "patients.txt" file and assign it to the local patient_file variable.
        patient_file = open("patients.txt", "r")

        # Loop through each row in the patient_file.
        for patient_row in patient_file:
            # We will use the split function to make this row to a list/array.
            patient_list = patient_row.split(",")

            current_vaccination_centre = patient_list[0]
            current_vaccine_code = patient_list[1]
            current_patient_id = patient_list[2]

            # Get vaccine dose number for the current patient in the loop.
            current_patient_dose_number = get_patient_dose_number_received(current_patient_id)

            if current_vaccination_centre.upper().strip() == "VC1":
                if current_patient_dose_number.upper().strip() == "D1":
                    if current_vaccine_code == "EC":
                        vc1_completed_counter += 1
                    else:
                        vc1_first_dose_counter += 1
                elif current_patient_dose_number.upper().strip() == "D2":
                    vc1_completed_counter += 1
            elif current_vaccination_centre.upper().strip() == "VC2":
                if current_patient_dose_number.upper().strip() == "D1":
                    if current_vaccine_code == "EC":
                        vc2_completed_counter += 1
                    else:
                        vc2_first_dose_counter += 1
                elif current_patient_dose_number.upper().strip() == "D2":
                    vc2_completed_counter += 1

        # Close the "patients.txt" file.
        patient_file.close()

    # Show the results to the user.
    print("------- Patients Vaccinated Information -------")
    print("VC1 Vaccination Centre:")
    print("   Total patients waiting for dose 2: " + str(vc1_first_dose_counter))
    print("   Total patients completed vaccination: " + str(vc1_completed_counter))
    print("")
    print("VC2 Vaccination Centre:")
    print("   Total patients waiting for dose 2: " + str(vc2_first_dose_counter))
    print("   Total patients completed vaccination: " + str(vc2_completed_counter))


# -----------------------------------------------------------------------------------
# This section contains main menu options for the program.
# -----------------------------------------------------------------------------------

# Main menu options.
def main():
    while True:
        # Show banner to inform users.
        print("")
        print("----------Covid-19 Vaccination Record Management System----------")
        print("Warning! This system is for vaccination centre staff only!")
        print("Any unauthorised access is restricted! ")
        # prompted user to input password until corrected password is inputted
        staff_password = input("Please enter password: ").strip()
        if staff_password == "Covid@19VC1" or staff_password == "Covid@19VC2":
            print("Successfully logged in!")
            break  # if password input is corrected, exit the loop
        else:
            print("Incorrect password!")
            print("Reminder! This management system is for vaccination centre staff only!")
    while True:
        # Show options to the users.
        print("")
        print("------------ COVID-19 VACCINATION RECORD MANAGEMENT SYSTEM -------------")
        print("1-----New Patient Registration")
        print("2-----Vaccine Administration")
        print("3-----Search Patient Record and Vaccination Status")
        print("4-----Statistical Information on Patients Vaccinated")
        print("5-----Exit System")

        # Prompt user to input option
        option_selected = input("Please choose an option: ").strip()

        # condition
        if option_selected == "1":
            new_patient_registration()
        elif option_selected == "2":
            vaccine_administration()
        elif option_selected == "3":
            search_patient_and_vaccination_status()
        elif option_selected == "4":
            statistical_information()
        elif option_selected == "5":
            print("You've successfully exited the vaccination system! Thank You! Stay safe!")
            break
        else:
            print("Invalid option!")


# Call the main function.
main()
